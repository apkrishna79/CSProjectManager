@model dynamic

<div class="reply" style="margin-left: 40px; border-left: 2px solid #ccc; padding-left: 10px;">
    <small>@await Model.GetAuthorNameAsync.Invoke(Model.Reply.PosterId) replied: </small>
    <p style="white-space: pre-wrap;">@Model.Reply.Content</p>

    <!-- Reply Button -->
    <button type="button" class="btn btn-sm btn-primary reply-btn" data-post-id="@Model.Reply.Id">Reply</button>

    <!-- Hidden Reply Form -->
    <form method="post" class="reply-form" id="reply-form-@Model.Reply.Id" style="display: none;">
        @Html.AntiForgeryToken()  <!-- CSRF Protection -->

        <input type="hidden" name="immediateParentPostId" value="@Model.Reply.Id" />
        <input type="hidden" name="headPostId" value="@Model.Reply.HeadPostId" />

        <textarea class="form-control reply-text" name="content" rows="3"></textarea>
        <button type="submit" class="btn btn-success submit-reply">Submit Reply</button>
    </form>

    <!-- Recursively render child replies -->
    @if (Model.Reply.ReplyIds != null && Model.Reply.ReplyIds.Count > 0)
    {
        <div class="nested-replies">
            @foreach (var subReplyId in Model.Reply.ReplyIds)
            {
                var subReply = await Model.FetchPostById.Invoke(subReplyId);
                if (subReply != null)
                {
                    @await Html.PartialAsync("Discussion/_ReplyPartial", new
                        {
                            Reply = subReply,
                            FetchPostById = Model.FetchPostById,
                            GetAuthorNameAsync = Model.GetAuthorNameAsync
                        })
                }
            }
        </div>
    }
</div>


<script>
        $(document).ready(function () {
        $(document).on("click", ".reply-btn", function () {
            var postId = $(this).data("post-id");
            $("#reply-form-" + postId).toggle();
        });

        $(document).on("submit", ".reply-form", function (event) {
            event.preventDefault(); // Prevent full-page refresh

            var form = $(this);
            var formData = form.serialize(); // Serialize form data (includes CSRF token)

            $.post("/DiscussionPost?handler=PostReply", formData)
                .done(function () {
                    location.reload(); // Reload to reflect the new reply
                })
                .fail(function (xhr) {
                    alert("Failed to post reply: " + xhr.responseText);
                });
        });
    });

</script>
